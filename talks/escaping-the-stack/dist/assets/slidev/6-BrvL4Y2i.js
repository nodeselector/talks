import{c as a,k as n,q as l,s as r,z as o,o as c,e,Z as t}from"../modules/vue--2rrS9jf.js";import{I as i}from"./default-DAz_qJor.js";import{b as f,$ as s}from"../index-DZaC20iK.js";import{p as d,u as m,f as h}from"./context-BcuC4P__.js";import"../modules/shiki-BQ1XKe-f.js";const p=e("h2",null,"How do we decide between the heap and the stack?",-1),u=e("p",null,"Escape analysis!",-1),_=e("ul",null,[e("li",null,"Done at compile time to inform the runtime when doing memory allocations."),e("li",null,"Ensures that no goroutine can access another goroutine’s stack."),e("li",null,[t("Based on how a value is shared, not how it is declared."),e("sup",{class:"footnote-ref"},[e("a",{href:"#fn1",id:"fnref1"},"[1]")])])],-1),w=e("hr",{class:"footnotes-sep"},null,-1),g=e("section",{class:"footnotes"},[e("ol",{class:"footnotes-list"},[e("li",{id:"fn1",class:"footnote-item"},[e("p",null,[e("a",{href:"https://www.ardanlabs.com/blog/2017/05/language-mechanics-on-escape-analysis.html",target:"_blank",rel:"noopener"},"https://www.ardanlabs.com/blog/2017/05/language-mechanics-on-escape-analysis.html"),t(),e("a",{href:"#fnref1",class:"footnote-backref"},"↩︎")])])])],-1),b={__name:"6",setup(k){return d(s),m(),(x,y)=>(c(),a(i,l(r(o(h)(o(s),5))),{default:n(()=>[p,u,_,w,g]),_:1},16))}},E=f(b,[["__file","/@slidev/slides/6.md"]]);export{E as default};
